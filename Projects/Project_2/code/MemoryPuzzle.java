/**
 * MemoryPuzzle.java
 *
 *
 * Author: Guthrie Price
 * Date: 5/18/2015
 * Purpose: Memory puzzle game for CSC 18C
 */

import java.util.Scanner;
import java.util.InputMismatchException;

public class MemoryPuzzle {
	
	private CardGenerator cards; //The card generator to ensure random cards and even amounts of card types
	private int boardSize=0; //The board size
	private Board board; //Container for cards
	private Scanner input;

	public MemoryPuzzle(char[] symbols, Scanner input){
        this.input = input;
		cards = new CardGenerator(boardSize,symbols);
	}
    
    //Fills the board with the cards generated by the card generator
    private void fillBoard(){
        board = new Board(boardSize); //Initialize the board
    	cards.fillStack(); //Generate a stack of cards
        //Dump the stack of cards into the board
    	for(int i=0;i<Utility.pow(boardSize,2);i++){
    		board.add(cards.pop());
        }
    }
    
    //Prints the board to the screen
    public void printBoard(){
        int spaceSize = boardSize*boardSize;
        //Print out the column numbers
        for(int i=0;i<boardSize;i++)
            System.out.print(" "+(i+1)+" ");
        System.out.println();
        //Print out each card followed by the row number
        for(int i=0;i<spaceSize;i++){
            Card card = (Card)board.getSpace()[i];
            if(i%board.getSize() == 0 && i != 0)
                System.out.println(" "+(i/boardSize));
            //If the card is hidden, print out a blank card
            if(card.isHidden())
                System.out.print("[ ]");
            //If the card isn't hidden, print out the symbol on the card
            else
                System.out.print("["+card.getData()+"]");
        }
        //Print out the final row number
        System.out.print(" "+boardSize);
        System.out.println("\n");
    }

    //Gets a coordinate from the user
    public Coordinate getCord(){
        int x;
        int y;
        x = Utility.getNumber("Enter x coordinate",1,boardSize,input);
        y = Utility.getNumber("Enter y coordinate",1,boardSize,input);
        return new Coordinate(x,y);
    }

    //Checks to see if the game is over
    //The game is over if the all the cards on the board are not hidden
    //or if the user ran out of guesses
    public boolean gameOver(int guesses){
        if(guesses==0) return true;
        for(CordObj card : board.getSpace()){
            if(((Card)card).isHidden())
                return false;
        }
        return true;
    }
    
    //Returns a card based on the coordinate chosen by the user
    public Card getCard(){
        Card choice;
        choice = (Card)board.get(getCord());
        while(!(choice.isHidden())){
            System.out.println("Oops, try again");
            choice = (Card)board.get(getCord());
        }
        return choice;
    }

    //Prints the main menu
    public void printMainMenu(){
        System.out.println("Main Menu");
        System.out.println("-------------------");
        System.out.println("1. Start game");
        System.out.println("2. Quit\n");
    };

    //Validates board size. I.E. must be divisible by 2
    public boolean validBoardSize(){
        if(boardSize % 2 == 0)
            return true;
        System.out.println("Board size must be divisible by 2");
        return false;
    }

    //Runs the game
    public void run(){
        int gameChoice;
        Card choice1; 
        Card choice2;
        do{
            printMainMenu();
            gameChoice = Utility.getNumber("Enter menu choice",1,2,input);
            switch(gameChoice){
                case 1:
                    do{
                        boardSize = Utility.getNumber("Enter board size (must be divisible by 2)",4,32,input);
                    }while(!validBoardSize());

                    cards.setSpace(boardSize);
                    fillBoard();
                    int guesses = Utility.pow(boardSize,2)/2;
                    while(!gameOver(guesses)){
                        //While the game isn't over get guesses from the user
                        System.out.println();
                        printBoard();
                        System.out.println("Number of incorrect guesses remaining: "+guesses);
                        //Make sure the coordinates are not the same
                        do{
                            System.out.println("Enter first coordinate");
                            choice1 = getCard();
                            System.out.println("Enter second coordinate");
                            choice2 = getCard();
                            if(choice1.getCord().isEqual(choice2.getCord()))
                                System.out.println("You must choose different coordinates! Try again.");
                        }while(choice1.getCord().isEqual(choice2.getCord()));

                        //If the symbols on the cards are the same, then the user got a match
                        //Set the cards to not be hidden 
                        if(choice1.isEqual(choice2)){
                            System.out.println("\nYou got a match!");
                            choice1.show();
                            choice2.show();
                        }

                        //In the other case the user didn't get a match
                        //Show the cards and then flip them back over
                        else{
                            System.out.println("\nYou missed!\n");
                            choice1.show();
                            choice2.show();
                            printBoard();
                            choice1.hide();
                            choice2.hide();
                            guesses-=1;
                        }
                    System.out.println();
                    }

                    //Print out the ending messages based on win or loss
                    System.out.println();
                    printBoard();
                    if(guesses == 0)
                        System.out.println("\nYou ran out of guesses, you lose...");

                    else{
                        System.out.println("\nCongratulations, you won!");
                        System.out.println("Your score for this game is: "+guesses+"\n");
                    }
                    System.out.println();
                    break;
                case 2:
                    System.out.println("Ending game");
                    break;
                default:
                    System.out.println("Error, magic happened");
                    System.exit(1);
            }
        }while(gameChoice!=2);

    }
          
    //Prints the board out as a string  
    public String toString(){
    	return board.toString();
    }
}
